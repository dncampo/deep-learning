import os, random, math, pandas
import numpy as np
from scipy import misc
import matplotlib.pyplot as plt
from loadImages import loadImages
import normalizeImage
from scaleImage import scaleImage
from getPatches import getPatches
# borrar: cosas para sacar cuando este listo para presentar

dataDir='/home/leandro/workspace/Dropbox/ref/deeplearning_cifasis/deep-learning-course/test/words/'
imFiles=[]

for d in os.walk(dataDir):
    for f in d[2]:
        if ".directory" not in f:
            imFiles.append(d[0]+"/"+f)
            


# TP1.4:
# Utilice las funciones de los ejercicios anteriores sobre ​las imágenes de test de las palabras manuscritas del texto de Borges​. Describa el efecto sobre las imágenes procesadas. 

# Dataset stats
datasizes=np.zeros((len(imFiles),3))
for (k,f) in enumerate(imFiles):
    im=misc.imread(f)
    datasizes[k,:]=(im.shape[0],im.shape[1],im.ndim)
    
imdata=pandas.DataFrame(datasizes)
#imdata.boxplot()
#plt.show()

# Todas las imagenes son rgb, y el dataset es chico por lo que se puede tomar el maximo de cada dimensión para escalar las imágenes.
maxSize=(np.max(datasizes[:,0]),np.max(datasizes[:,1]))

images=loadImages(imFiles,maxSize)

patches=getPatches(imFiles,N=10,S=16,norm=True)
f1,subplots1=plt.subplots(2,5)
for k1  in range(0,2):
    for k2  in range(0,5):
        im2plot=scaleImage(patches[0,k1*5+k2])
        subplots1[k1,k2].imshow(im2plot)

patches=getPatches(imFiles,N=10,S=16,norm=False)
f2,subplots2=plt.subplots(2,5)
for k1  in range(0,2):
    for k2  in range(0,5):
        im2plot=scaleImage(patches[imej[0],k1*5+k2])
        subplots2[k1,k2].imshow(im2plot)
plt.show()
